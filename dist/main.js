(()=>{var e={738:(e,t,n)=>{const r=n(147),o=n(17),s=n(37);function i(e){console.log(`[dotenv][DEBUG] ${e}`)}const c=/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/,a=/\\n/g,p=/\r\n|\n|\r/;function l(e,t){const n=Boolean(t&&t.debug),r={};return e.toString().split(p).forEach((function(e,t){const o=e.match(c);if(null!=o){const e=o[1];let t=o[2]||"";const n=t.length-1,s='"'===t[0]&&'"'===t[n];"'"===t[0]&&"'"===t[n]||s?(t=t.substring(1,n),s&&(t=t.replace(a,"\n"))):t=t.trim(),r[e]=t}else n&&i(`did not match key and value when parsing line ${t+1}: ${e}`)})),r}e.exports.config=function(e){let t=o.resolve(process.cwd(),".env"),n="utf8",c=!1;var a;e&&(null!=e.path&&(t="~"===(a=e.path)[0]?o.join(s.homedir(),a.slice(1)):a),null!=e.encoding&&(n=e.encoding),null!=e.debug&&(c=!0));try{const e=l(r.readFileSync(t,{encoding:n}),{debug:c});return Object.keys(e).forEach((function(t){Object.prototype.hasOwnProperty.call(process.env,t)?c&&i(`"${t}" is already defined in \`process.env\` and will not be overwritten`):process.env[t]=e[t]})),{parsed:e}}catch(e){return{error:e}}},e.exports.parse=l},672:(e,t,n)=>{const r=n(685).createServer((async(e,t)=>{"/api"===e.url&&"GET"===e.method?(t.writeHead(200,{"Content-Type":"application/json"}),t.write("Hi there, This is a Vanilla Node.js API"),t.end()):(t.writeHead(404,{"Content-Type":"application/json"}),t.end(JSON.stringify({message:"Route not found"})))}));e.exports=r},182:(e,t,n)=>{const r=n(738),o=n(17);r.config({path:o.join(__dirname,"../.env")}),e.exports={PORT:process.env.PORT,NODE_ENV:"production"}},147:e=>{"use strict";e.exports=require("fs")},685:e=>{"use strict";e.exports=require("http")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}(()=>{const{PORT:e}=n(182);n(672).listen(e,(()=>{console.log(`server started on port: ${e}`)}))})()})();